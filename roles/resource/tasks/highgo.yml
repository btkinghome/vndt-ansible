- name: Register highgo info
  ansible.builtin.set_fact:
    svc: "{{ item }}"
  when: item.name == "highgo"
  loop: "{{ services_list }}"

- block:
  - name: set fact minimal memory
    ansible.builtin.set_fact:
      minimal_instance_memory: 1

  - name: set fact maxmal memory Gi
    ansible.builtin.set_fact:
      maxmal_instance_memory: 24

  - name: set fact memory percent
    ansible.builtin.set_fact:
      memory_percent: 0.02

  - name: update memory percent
    ansible.builtin.set_fact:
      memory_percent: "{{ svc.deploy.memory_percent | float }}"
    when: svc is defined and svc.deploy.memory_percent is defined

  - name: Set service vars.
    ansible.builtin.set_fact:
      service_name: "highgo"
      new_memory: "{{ [([(hosts_min_memory | float / 1024 * (memory_percent|float)),(minimal_instance_memory|float)] | max),(maxmal_instance_memory|float)] | min }}Gi"
      instance_number: 1
      pg_pool: 1

  - name: Set new memory.
    ansible.builtin.set_fact:
      instance_number: 3
      pg_pool: 2
    when:
    - services_data.clusters.HA is true
    - hosts_count | int >= 3

  - name: Remove highgo service
    ansible.builtin.set_fact:
      services_list: "{{ services_list | rejectattr('name', 'equalto', service_name) | list }}"
    when: service_name is defined

  - name: Get custom password
    ansible.builtin.set_fact:
      highgo_password: "{{ item.config.password }}"
    when:
    - item.name == service_name
    - item.config.password is defined
    - item.config.password != ''
    loop: "{{ services_data.services }}"

  - name: Generate a random password
    ansible.builtin.set_fact:
      highgo_password: "{{ lookup('community.general.random_string', length=16, upper=1, lower=1, digits=1, special=0, override_special='') }}"
    when: highgo_password is not defined

  - name: Debug update password
    ansible.builtin.debug:
      var: highgo_password

  - name: Set update service
    ansible.builtin.set_fact:
      services_list: "{{ services_list + [item | combine({'deploy':{'replicas': instance_number | int, 'memory': new_memory, 'memory_percent': memory_percent|float },'config':{'password': highgo_password,'pg_pool': pg_pool}}, recursive=true)] }}"
    when: item.name == service_name
    loop: "{{ services_data.services }}"
  when: svc is defined
