- name: Register clickhouse info
  ansible.builtin.set_fact:
    svc: "{{ item }}"
  when: item.name == "clickhouse"
  loop: "{{ services_list }}"

- block:
  - name: set fact minimal memory
    ansible.builtin.set_fact:
      minimal_instance_memory: 1

  - name: set fact memory percent
    ansible.builtin.set_fact:
      memory_percent: 0.0625

  - name: update memory percent
    ansible.builtin.set_fact:
      memory_percent: "{{ svc.deploy.memory_percent | float }}"
    when: svc is defined and svc.deploy.memory_percent is defined

  - name: Set service vars.
    ansible.builtin.set_fact:
      service_name: "clickhouse"
      new_memory: "{{ [(hosts_min_memory | float / 1024 * (memory_percent|float)),(minimal_instance_memory|float)] | max }}Gi"
      instance_number: 1
      ck_replicas: 1

  - name: Set HA clickhouse replicas
    ansible.builtin.set_fact:
      # instance_number if hosts_count is not divisible by 3, set to the nearest lower multiple of 3
      instance_number: 3
      ck_replicas: 3
    when:
    - services_data.clusters.HA is true
    - hosts_count | int >= 3
  # - name: Set new memory.
  #   ansible.builtin.set_fact:
  #     instance_number: 3
  #   when:
  #   - services_data.clusters.HA is true
  #   - hosts_count | int >= 3

  - name: Remove clickhouse service
    ansible.builtin.set_fact:
      services_list: "{{ services_list | rejectattr('name', 'equalto', service_name) | list }}"
    when: service_name is defined

  - name: Set update service
    ansible.builtin.set_fact:
      services_list: "{{ services_list + [item | combine({'deploy':{'replicas': instance_number | int, 'memory': new_memory, 'memory_percent': memory_percent|float},'config':{'replicasCount': ck_replicas |int}}, recursive=true)] }}"
    when: item.name == service_name
    loop: "{{ services_data.services }}"
  when: svc is defined
