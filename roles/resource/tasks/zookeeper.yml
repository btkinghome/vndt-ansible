- name: Register zookeeper info
  ansible.builtin.set_fact:
    svc: "{{ item }}"
  when: item.name == "zookeeper"
  loop: "{{ services_list }}"

- block:
  - name: set fact minimal memory Gi
    ansible.builtin.set_fact:
      minimal_instance_memory: 1

  - name: set fact maxmal memory Gi
    ansible.builtin.set_fact:
      maxmal_instance_memory: 4

  - name: set fact memory percent
    ansible.builtin.set_fact:
      memory_percent: 0.03125

  - name: update memory percent
    ansible.builtin.set_fact:
      memory_percent: "{{ svc.deploy.memory_percent | float }}"
    when: svc is defined and svc.deploy.memory_percent is defined

  - name: Set service vars.
    ansible.builtin.set_fact:
      service_name: "zookeeper"
      new_memory: "{{ [([(hosts_min_memory | float / 1024 * (memory_percent|float)),(minimal_instance_memory|float)] | max),(maxmal_instance_memory|float)] | min }}Gi"
      instance_number: "{{ [(hosts_count | int -1 if hosts_count | int % 2 == 0 else hosts_count | int ), 3] | min }}"

  - name: Remove zookeeper service
    ansible.builtin.set_fact:
      services_list: "{{ services_list | rejectattr('name', 'equalto', service_name) | list }}"
    when: service_name is defined

  - name: Set update service
    ansible.builtin.set_fact:
      services_list: "{{ services_list + [item | combine({'deploy':{'replicas': instance_number | int, 'memory': new_memory, 'memory_percent': memory_percent |float}}, recursive=true)] }}"
    when: item.name == service_name
    loop: "{{ services_data.services }}"
  when: svc is defined
